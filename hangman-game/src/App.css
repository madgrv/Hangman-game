.App {
	text-align: center;
}

.App-logo {
	height: 40vmin;
	pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
	.App-logo {
		animation: App-logo-spin infinite 20s linear;
	}
}

/* /////// */

html {
	overflow-y: scroll;

	--game-spacing: 32px;
	--header-height: 4rem;

	--radius: 4px;
	--spacing: 2px;

	--color-success: hsl(150deg 70% 30%);
	--color-warning: hsl(50deg 100% 30%);
	--color-error: hsl(0deg 70% 45%);
	--color-guessed: hsla(155, 70%, 30%, 0.7);
	--color-wrong: hsla(356, 100%, 47%, 0.5);
	--color-info: hsl(216, 100%, 47%);
	--color-gray-100: hsl(0deg 0% 10%);
	--color-gray-300: hsl(0deg 0% 25%);
	--color-gray-400: hsl(0deg 0% 40%);
	--color-gray-500: hsl(0deg 0% 50%);
	--color-gray-600: hsl(0deg 0% 65%);
	--color-gray-700: hsl(0deg 0% 75%);
	--color-gray-800: hsl(0deg 0% 80%);
	--color-gray-900: hsl(0deg 0% 90%);
}

body {
	background-color: #cacaca;
}

.wrapper {
	display: flex;
	flex-direction: column;
	min-height: 100%;
}

header {
	display: flex;
	margin: auto;
	justify-content: space-between;
	align-items: center;
	height: var(--header-height);
	padding-bottom: 2vh;
	color: var(--color-gray-300);
	width: 110%;
}

/* header .side {
	width: var(--header-height);
	display: grid;
	place-content: center;
} */

h1 {
	flex: 1;
	font-size: 2rem;
	line-height: var(--header-height);
	text-align: center;
}

@media (max-width: 25rem) {
	h1 {
		font-size: 1.25rem;
	}
}

.game-wrapper {
	flex: 1;
	display: flex;
	flex-direction: column;
	gap: var(--game-spacing);
	padding: var(--game-spacing) 32px;
	margin: 0 auto;
	min-width: 250px;
	max-width: min(500px, 58vh, 100%);
	height: 250px;
	position: relative;
}

.img-wrapper {
	flex: 1;
	display: flex;
	flex-direction: column;
	gap: var(--game-spacing);
	padding: var(--game-spacing) 12px;
	margin: 0 auto;
	min-width: 250px;
	max-width: min(250px, 38vh, 100%);
	opacity: 80%;
}

.img {
	max-width: 100%; /* Limit the image width to its parent's width */
	max-height: 100%; /* Limit the image height to its parent's height */
	width: auto; /* Ensure the aspect ratio is maintained */
	height: auto; /* Ensure the aspect ratio is maintained */
	object-fit: contain; /* Scale the image to fit while preserving aspect ratio */
	transition: opacity 0.5s ease-in-out; /* Add a transition for the opacity property */
	border-radius: 6px;
}

.guess-results {
	flex: 1;
	display: flex;
	flex-direction: row;
	justify-content: center;
}

.cell {
	position: relative;
	width: 20%;
	display: grid;
	place-content: center;
	aspect-ratio: 1 / 1;
	/* border: 2px solid var(--color-gray-700); */
	box-shadow: 0px 2px 3px var(--color-gray-600);
	border-radius: var(--radius);
	margin: var(--spacing);
	font-size: 2rem;
	max-height: 20vw;
}

.key-wrapper {
	display: flex;
	flex-direction: column;
}

.key-row {
	display: flex;
	flex-direction: row;
	margin: 1px;
	padding: 3px;
	font-size: 1rem;
	place-content: center;
}

.key-cell {
	position: relative;
	width: 25px;
	height: 40px;
	padding: 2px;
	display: flex;
	margin: 2px;
	place-content: center;
	background-color: var(--color-gray-600);
	border-radius: 6px;
	font-size: 1.5rem;
	transition: 0.1s;
	color: var(--color-gray-200);
}

.key-cell:hover {
	background-color: var(--color-gray-700);
	cursor: pointer;
	transform: translateY(-3px) scale(1.07);
	z-index: 1;
	box-shadow: 0px 2px 0px 0px rgba(128, 128, 128, 0.575);
}

.key-cell:active {
	transform: scale(0.98);
	box-shadow: inset 0px 4px 1px 1px rgba(0, 0, 0, 0.276);
	/* background-color: var(--color-gray-700); */
}

.guessed,
.guessed:hover,
.guessed:active {
	background-color: var(--color-guessed);
}

.wrong,
.wrong:hover,
.wrong.active {
	background-color: var(--color-wrong);
}

.backspace {
	/* background-color: hsla(345, 100%, 47%, 0.8); */
	background-color: var(--color-gray-400);
	margin-left: 6px;
}

.backspace:hover {
	/* background-color: hsla(345, 100%, 47%, 0.7) !important; */
	background-color: var(--color-gray-400);
}

.backspace:active {
	transition: 0.1s;
}

.result-display {
	display: flex;
	margin: auto;
	padding: 10px 10px 18px 10px;
	justify-content: space-between;
	color: var(--color-gray-300);
}

.disabled-div {
	pointer-events: none; /* Prevents click events */
	opacity: 0.4; /* Dim the element to show it's disabled */
	user-select: none; /* Prevents text selection */
}

.button {
	font-weight: 600;
	display: flex;
	margin: auto;
	margin-top: 18px;
	box-shadow: 5px 5px 1px rgba(128, 128, 128, 0.7);
	transition: 200ms;
}

.button:hover {
	cursor: pointer;
	box-shadow: 6px 6px 1px rgba(128, 128, 128, 0.7);
}

.button:active {
	box-shadow: 3px 3px 1px rgba(128, 128, 128, 0.8);
	transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
}

.pushable {
	/* background: hsl(160, 100%, 24%); */
	/* background: hsl(340deg 100% 32%); */
	background: linear-gradient(
		to left,
		hsl(340deg 100% 16%) 0%,
		hsl(340deg 100% 32%) 8%,
		hsl(340deg 100% 32%) 92%,
		hsla(340, 100%, 16%, 0.136) 100%
	);
	border-radius: 12px;
	border: none;
	padding: 0;
	cursor: pointer;
	outline-offset: 4px;
}

.front {
	display: block;
	padding: 12px 42px;
	border-radius: 12px;
	font-size: 1.25rem;
	/* background: hsl(160, 100%, 35%); */
	background: hsl(345deg 100% 47%);
	color: white;
	transform: translateY(-6px);
	/* 'will change'enables hardware acceleration */
	will-change: transform;
	/* transition: transform 250ms; */
	transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
}

.pushable:hover .front {
	transform: translateY(-8px);
	transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
}

.pushable:active .front {
	transform: translateY(-2px);
	transition: transform 34ms;
}

.banner {
	position: absolute;
	z-index: 1;
	display: flex;
	justify-content: center;
	text-align: center;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	padding: 8vw;
	border-radius: 8px;
	color: white;
	opacity: 0.95;
	box-shadow: 0px 10px 15px 2px rgba(13, 84, 48, 0.6);
	min-width: 200px;
}

.banner-close {
	font-size: small;
	border: none;
	background-color: transparent;
	color: var(--color-gray-200);
	cursor: pointer;
	text-decoration: underline;
}

.won {
	background: var(--color-success);
}

.lost {
	background: var(--color-error);
}

.info {
	background: var(--color-info);
	opacity: 97%;
}

.info-wrapper {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	justify-content: space-between;
}

.info-icon {
	display: inline-flex; /* Aligns the child element (i) to the center */
	align-items: center; /* Vertical alignment */
	justify-content: center; /* Horizontal alignment */
	border: 3px solid var(--color-info);
	border-radius: 50%; /* Makes the button round */
	background-color: transparent; /* Makes the background transparent */
	padding: 10px; /* Adjust the padding to make the circle larger */
	cursor: pointer; /* Changes the mouse cursor to a pointer on hover */
	outline: none; /* Removes the outline to avoid default focus styles */
	width: 30px; /* Specifies a width for the button */
	height: 30px; /* Specifies a height for the button */
	color: var(--color-info); /* Sets the text color to match the border */
	font-size: 18px; /* Adjust the font size as needed */
	font-weight: bold; /* Makes the "i" bold */
}

.info-text {
	cursor: pointer; /* Changes the mouse cursor to a pointer on hover */
	width: auto; /* Specifies a width for the button */
	margin-left: 4px;
	height: 12px; /* Specifies a height for the button */
	text-decoration: none; /* Removes underlines from text if any */
	color: var(--color-info); /* Sets the text color to match the border */
	background-color: transparent; /* Makes the background transparent */
	font-size: 14px; /* Adjust the font size as needed */
	font-weight: bold;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 0.95;
	}
}

.fade-in {
	animation: fadeIn 400ms ease-in-out;
}
