.App {
	text-align: center;
}

.App-logo {
	height: 40vmin;
	pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
	.App-logo {
		animation: App-logo-spin infinite 20s linear;
	}
}

/* .App-header {
	background-color: #282c34;
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	font-size: calc(10px + 2vmin);
	color: white;
}

.App-link {
	color: #61dafb;
}

@keyframes App-logo-spin {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
} */

/* /////// */

html {
	overflow-y: scroll;

	--game-spacing: 32px;
	--header-height: 4rem;

	--color-success: hsl(150deg 70% 30%);
	--color-warning: hsl(50deg 100% 30%);
	--color-error: hsl(0deg 70% 45%);
	--color-gray-100: hsl(0deg 0% 10%);
	--color-gray-300: hsl(0deg 0% 25%);
	--color-gray-500: hsl(0deg 0% 50%);
	--color-gray-700: hsl(0deg 0% 75%);
	--color-gray-800: hsl(0deg 0% 80%);
	--color-gray-900: hsl(0deg 0% 90%);
}

.wrapper {
	display: flex;
	flex-direction: column;
	min-height: 100%;
}

header {
	display: flex;
	height: var(--header-height);
	border-bottom: 1px solid var(--color-gray-700);
	color: var(--color-gray-300);
}

header .side {
	width: var(--header-height);
	display: grid;
	place-content: center;
}

h1 {
	flex: 1;
	font-size: 2rem;
	line-height: var(--header-height);
	text-align: center;
}

@media (max-width: 25rem) {
	h1 {
		font-size: 1.25rem;
	}
}

.game-wrapper {
	flex: 1;
	display: flex;
	flex-direction: column;
	gap: var(--game-spacing);
	padding: var(--game-spacing) 32px;
	margin: 0 auto;
	min-width: 250px;
	max-width: min(500px, 58vh, 100%);
	height: 250px;
}

.img-wrapper {
	flex: 1;
	display: flex;
	flex-direction: column;
	gap: var(--game-spacing);
	padding: var(--game-spacing) 32px;
	margin: 0 auto;
	min-width: 250px;
	max-width: min(250px, 38vh, 100%);
}

.img {
	max-width: 100%; /* Limit the image width to its parent's width */
	max-height: 100%; /* Limit the image height to its parent's height */
	width: auto; /* Ensure the aspect ratio is maintained */
	height: auto; /* Ensure the aspect ratio is maintained */
	object-fit: contain; /* Scale the image to fit while preserving aspect ratio */
	transition: opacity 0.5s ease-in-out; /* Add a transition for the opacity property */
}

.guess-results {
	flex: 1;
	display: flex;
	flex-direction: row;
	justify-content: center;
}

.cell {
	position: relative;
	width: 20%;
	display: grid;
	place-content: center;
	aspect-ratio: 1 / 1;
	border: 2px solid var(--color-gray-700);
	border-radius: var(--radius);
	font-size: 2rem;
}

.key-wrapper {
	display: flex;
	flex-direction: column;
}

.key-row {
	display: flex;
	flex-direction: row;
	margin: 1px;
	padding: 3px;
	font-size: 1rem;
	place-content: center;
}

.key-cell {
	position: relative;
	width: 35px;
	height: 50px;
	padding: 2px;
	display: flex;
	margin: 1px;
	place-content: center;
	background-color: var(--color-gray-800);
	border-radius: 6px;
	font-size: 2rem;
	transition: 0.1s;
}
.backspace {
	background-color: rgba(255, 19, 19, 0.639);
	margin-left: 6px;
}

.backspace:hover {
	background-color: rgba(255, 19, 19, 0.639) !important;
	box-shadow: 0px 3px 3px 0px rgba(126, 0, 0, 0.826) !important;
}

.backspace:active {
	box-shadow: 0px 0px 1px 0px rgba(126, 0, 0, 0.826) !important;
	transition: 0.1s;
}

.key-cell:hover {
	background-color: var(--color-gray-900);
	cursor: pointer;
	transform: translateY(-3px) scale(1.07);
	z-index: 1;
	/* box-shadow: 0px 1px 3px 0px rgba(128, 128, 128, 0.575); */
}

.key-cell:active {
	transform: scale(0.98);
	box-shadow: inset 0px 4px 1px 1px rgba(0, 0, 0, 0.276);
	/* background-color: var(--color-gray-700); */
}

.guess-input-wrapper {
	display: flex;
	flex-direction: column;
	gap: 8px;
	height: 6.75rem;
}

.guess-input-wrapper label {
	font-size: 1.25rem;
}

.guess-input-wrapper input {
	display: block;
	width: 100%;
	font-size: 2rem;
	border: 2px solid var(--color-gray-300);
	border-radius: 4px;
	padding: 8px 16px;
	outline-offset: 4px;
}

.disabled-div {
	pointer-events: none; /* Prevents click events */
	opacity: 0.4; /* Dim the element to show it's disabled */
	user-select: none; /* Prevents text selection */
}

.new-game {
	font-weight: 600;
	display: flex;
	margin: auto;
	border: none;
	border-radius: 4px;
	margin-top: 15px;
	padding: 24px;
	background-color: var(--color-success);
	color: white;
	transition: transform 0.2s;
}

.new-game:hover {
	cursor: pointer;
	transform: scale(1.1);
}

.new-game:active {
	transform: scale(1);
}

.happy.banner {
	background: var(--color-success);
	color: white;
}
.sad.banner {
	background: var(--color-error);
	color: white;
}
